---
configmap:
  apiVersion: v1
  # Addition Spring properties can be provided as a yaml block here, this will be mounted into the container and override / extend the config found in the application.yml inside the jar
  springConfig: {}

deployment:
  apiVersion: apps/v1
  containerPort: 8080
  image:
    # Repo And Tag are not provided here as the value for the repo will be unique for each user/customer as they will be building their own docker images and push to their own Container Registries 
    # The tag will use the .AppVersion as the default, meaning that customers who want to install V1 will get V1.0.0 of the software - you may supply a hard coded version if required  
    # The values for each of these should be supplied in the .Values folder of an individual deployment within the specification repository - See https://github.com/SecureApiGateway/SecureApiGateway/wiki/Deployment#repositories
    # repo:
    # tag:
    imagePullPolicy: Always
  java:
    opts: -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=50 -agentlib:jdwp=transport=dt_socket,address=*:9090,server=y,suspend=n
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 5
    failureThreshold: 5
    successThreshold: 1
    timeoutSeconds: 5
  mongodb:
    host: mongodb
  readinessProbe:
    periodSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 5
  replicas: 1
  resources:
    requests:
      cpu: 1
      memory: 1024Mi
    limits:
      cpu: 1
      memory: 1024Mi
  rollingUpdate:
    maxSurge: 50%
    maxUnavailable: 25%
  strategyType: RollingUpdate

service:
  apiVersion: v1
  port: 8080
  protocol: TCP
  targetPort: 80
  type: ClusterIP
