---
apiVersion: {{ .Values.deployment.apiVersion }}
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.strategyType}}
    {{ if eq .Values.deployment.strategyType "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        appVersion: {{ .Chart.AppVersion }}
        helmVersion: {{ .Chart.Version }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.deployment.image.repo }}:{{ default .Chart.AppVersion .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          ports:
            - name: http-server
              containerPort: {{ .Values.deployment.containerPort }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.deployment.containerPort }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.deployment.containerPort }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          volumeMounts:
            - name: spring-config
              mountPath: /app/config
          env:
          - name: SPRING_DATA_MONGODB_HOST
            value: {{ .Values.deployment.mongodb.host }}
          - name: SERVER_PORT
            value: {{ .Values.deployment.containerPort | quote }}
          - name: CONSENT_REPO_URI
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: CONSENT_REPO_URI
          - name: RS_DISCOVERY_FINANCIAL_ID
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: OB_ASPSP_ORG_ID
          - name: SPRING_PROFILES_ACTIVE
            value: "docker"
          - name: JAVA_OPTS
            value: {{ .Values.deployment.java.opts }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      volumes:
        {{- if .Values.configmap.springConfig }}
          - name: spring-config
            configMap:
              name: application-config
        {{- else }}
          - name: spring-config
            emptyDir: { }
        {{- end }}
