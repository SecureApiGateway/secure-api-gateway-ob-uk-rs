name: merge-master

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  SERVICE_NAME: securebanking-openbanking-uk-rs
  GIT_SHA_SHORT: $(echo ${{ github.sha }} | cut -c1-7)

jobs:
  build:
    runs-on: ubuntu-latest
    name: Check master integrity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: "14"
          architecture: x64
          server-id: maven.forgerock.org-community # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}

      - name: prepare artifact version
        id: prepare
        run: |
          echo "::set-output name=artifact-version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Set up forgerock maven snapshot repository
        if: contains(steps.prepare.outputs.artifact-version, 'SNAPSHOT')
        uses: actions/setup-java@v1
        with: # add snapshots repository on the settings.xml
          java-version: '14'
          architecture: x64
          server-id: maven.forgerock.org-community-snapshots # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

      - name: test
        run: |
          make verify

      - name: Deploy artifact package
        run: mvn -B deploy -DskipTests -DskipITs -DdockerCompose.skip -Ddockerfile.skip
        env:
          MAVEN_USERNAME: ${{ secrets.FR_ARTIFACTORY_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.FR_ARTIFACTORY_TOKEN }}

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_KEY }}
          export_default_credentials: true

      - run: |
          gcloud auth configure-docker

      - name: Build Docker Image
        run: |
          make docker tag=${{ env.GIT_SHA_SHORT }}
          docker tag eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:${{ env.GIT_SHA_SHORT }} eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:latest
          docker push eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:latest
      
      - name: 'run functional tests'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v SERVICE_NAME=rs'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
        id: run-pipeline

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_ACCESS_TOKEN }}
