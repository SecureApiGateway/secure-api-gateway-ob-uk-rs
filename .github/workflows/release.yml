name: Publish package to the ForgeRock artifactory
on:
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    name: Deploy release
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up forgerock maven repository
        uses: actions/setup-java@v1
        with: # running setup-java and overwrites the settings.xml
          java-version: "14"
          architecture: x64
          server-id: maven.forgerock.org-community # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

      - name: Set up snapshot forgerock maven repository
        if: contains(github.ref, 'SNAPSHOT')
        uses: actions/setup-java@v1
        with: # running setup-java and overwrites the settings.xml
          java-version: "14"
          architecture: x64
          server-id: maven.forgerock.org-community-snapshots # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

      - name: Release package
        run: mvn -B deploy -DskipTests -DskipITs -DdockerCompose.skip -Ddockerfile.skip
        env:
          MAVEN_USERNAME: ${{ secrets.FR_ARTIFACTORY_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.FR_ARTIFACTORY_TOKEN }}
      
      - name: helm version
        id: helm
        run: |
          HELM_VERSION=$(make version)
          echo ::set-output name=version::"$HELM_VERSION"

      - name: package helm
        run: |
          make helm version=${{ steps.helm.outputs.version }}

      - name: Publish Release Chart 
        id: upload
        uses: google-github-actions/upload-cloud-storage@v0
        with:
          path: ${{ env.SERVICE_NAME }}-${{ steps.helm.outputs.version }}.tgz
          destination: ${{ secrets.HELM_RELEASE_BUCKET }}/${{ env.SERVICE_NAME }}
      
      - name: Release Docker Image
        run: |
          make docker tag=${{ github.event.release.tag_name }} gcr-repo=${{ secrets.RELEASE_REPO }}
